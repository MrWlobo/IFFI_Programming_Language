//Int List
typedef struct intlist {
  int data;
  struct intlist* next;
} intlist_t;

void intAdd(intlist_t* list, int element) {
    intlist_t * current = list;
    while (current->next != NULL) {
        current = current->next;
    }
    current->data = element;
    current->next = (intlist_t*) malloc(sizeof(intlist_t));
    current->next->next = NULL;
}

int intLength(intlist_t* list) {
    intlist_t * current = list;
    int len = 0;
    while(current->next != NULL) {
        len++;
        current = current->next;
    }
    return len;
}


// Float list
typedef struct floatlist {
  float data;
  struct floatlist* next;
} floatlist_t;

void floatAdd(floatlist_t* list, float element) {
    floatlist_t * current = list;
    while (current->next != NULL) {
        current = current->next;
    }
    current->data = element;
    current->next = (floatlist_t*) malloc(sizeof(floatlist_t));
    current->next->next = NULL;
}

int floatLength(floatlist_t* list) {
    floatlist_t * current = list;
    int len = 0;
    while(current->next != NULL) {
        len++;
        current = current->next;
    }
    return len;
}


// String list
typedef struct stringlist {
  char* data;
  struct stringlist* next;
} stringlist_t;

void stringAdd(stringlist_t* list, char* element) {
    stringlist_t * current = list;
    while (current->next != NULL) {
        current = current->next;
    }
    current->data = element;
    current->next = (stringlist_t*) malloc(sizeof(stringlist_t));
    current->next->next = NULL;
}

int stringLength(stringlist_t* list) {
    stringlist_t * current = list;
    int len = 0;
    while(current->next != NULL) {
        len++;
        current = current->next;
    }
    return len;
}