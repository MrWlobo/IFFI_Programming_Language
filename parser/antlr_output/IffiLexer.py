# Generated from Iffi.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,70,596,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,0,1,0,
        1,0,1,0,3,0,148,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,
        160,8,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,170,8,2,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,3,3,180,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,3,4,194,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,3,5,206,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,216,8,6,1,7,
        1,7,1,7,1,7,1,7,1,7,3,7,224,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,3,8,236,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,246,8,9,
        1,10,1,10,1,10,1,10,3,10,252,8,10,1,11,1,11,1,11,1,11,3,11,258,8,
        11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,268,8,12,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,278,8,13,1,14,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,3,14,288,8,14,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,3,15,298,8,15,1,16,1,16,1,16,1,16,1,16,1,16,3,16,306,
        8,16,1,17,1,17,1,17,1,17,3,17,312,8,17,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,3,18,324,8,18,1,19,1,19,1,19,1,19,3,19,
        330,8,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,340,8,20,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,350,8,21,1,22,1,22,1,
        22,1,22,1,22,1,22,3,22,358,8,22,1,23,1,23,1,23,1,23,1,23,1,23,3,
        23,366,8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,
        24,378,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,3,25,394,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,3,26,404,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,3,
        27,414,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
        28,1,28,3,28,428,8,28,1,29,1,29,1,29,1,29,1,29,1,29,3,29,436,8,29,
        1,30,1,30,1,30,1,30,1,30,1,30,3,30,444,8,30,1,31,1,31,1,31,1,31,
        3,31,450,8,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,34,1,34,
        1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,
        1,41,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,
        1,47,1,48,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,
        1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,56,
        1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,
        1,62,1,62,1,62,1,63,1,63,1,63,1,64,3,64,534,8,64,1,64,4,64,537,8,
        64,11,64,12,64,538,1,65,3,65,542,8,65,1,65,5,65,545,8,65,10,65,12,
        65,548,9,65,1,65,3,65,551,8,65,1,65,4,65,554,8,65,11,65,12,65,555,
        1,66,1,66,5,66,560,8,66,10,66,12,66,563,9,66,1,67,1,67,1,67,1,67,
        1,67,1,67,1,67,1,67,1,67,3,67,574,8,67,1,68,4,68,577,8,68,11,68,
        12,68,578,1,68,1,68,1,69,1,69,5,69,585,8,69,10,69,12,69,588,9,69,
        1,69,3,69,591,8,69,1,69,1,69,1,69,1,69,1,586,0,70,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
        49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,
        117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,
        68,137,69,139,70,1,0,6,1,0,45,45,1,0,48,57,1,0,46,46,3,0,65,90,95,
        95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,638,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
        1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
        129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,
        0,0,0,139,1,0,0,0,1,147,1,0,0,0,3,159,1,0,0,0,5,169,1,0,0,0,7,179,
        1,0,0,0,9,193,1,0,0,0,11,205,1,0,0,0,13,215,1,0,0,0,15,223,1,0,0,
        0,17,235,1,0,0,0,19,245,1,0,0,0,21,251,1,0,0,0,23,257,1,0,0,0,25,
        267,1,0,0,0,27,277,1,0,0,0,29,287,1,0,0,0,31,297,1,0,0,0,33,305,
        1,0,0,0,35,311,1,0,0,0,37,323,1,0,0,0,39,329,1,0,0,0,41,339,1,0,
        0,0,43,349,1,0,0,0,45,357,1,0,0,0,47,365,1,0,0,0,49,377,1,0,0,0,
        51,393,1,0,0,0,53,403,1,0,0,0,55,413,1,0,0,0,57,427,1,0,0,0,59,435,
        1,0,0,0,61,443,1,0,0,0,63,449,1,0,0,0,65,451,1,0,0,0,67,457,1,0,
        0,0,69,459,1,0,0,0,71,461,1,0,0,0,73,463,1,0,0,0,75,465,1,0,0,0,
        77,467,1,0,0,0,79,469,1,0,0,0,81,471,1,0,0,0,83,473,1,0,0,0,85,475,
        1,0,0,0,87,478,1,0,0,0,89,480,1,0,0,0,91,482,1,0,0,0,93,484,1,0,
        0,0,95,486,1,0,0,0,97,488,1,0,0,0,99,491,1,0,0,0,101,493,1,0,0,0,
        103,496,1,0,0,0,105,499,1,0,0,0,107,502,1,0,0,0,109,505,1,0,0,0,
        111,508,1,0,0,0,113,510,1,0,0,0,115,513,1,0,0,0,117,515,1,0,0,0,
        119,518,1,0,0,0,121,520,1,0,0,0,123,523,1,0,0,0,125,526,1,0,0,0,
        127,529,1,0,0,0,129,533,1,0,0,0,131,541,1,0,0,0,133,557,1,0,0,0,
        135,573,1,0,0,0,137,576,1,0,0,0,139,582,1,0,0,0,141,142,5,105,0,
        0,142,143,5,110,0,0,143,148,5,116,0,0,144,145,5,73,0,0,145,146,5,
        78,0,0,146,148,5,84,0,0,147,141,1,0,0,0,147,144,1,0,0,0,148,2,1,
        0,0,0,149,150,5,102,0,0,150,151,5,108,0,0,151,152,5,111,0,0,152,
        153,5,97,0,0,153,160,5,116,0,0,154,155,5,70,0,0,155,156,5,76,0,0,
        156,157,5,79,0,0,157,158,5,65,0,0,158,160,5,84,0,0,159,149,1,0,0,
        0,159,154,1,0,0,0,160,4,1,0,0,0,161,162,5,98,0,0,162,163,5,111,0,
        0,163,164,5,111,0,0,164,170,5,108,0,0,165,166,5,66,0,0,166,167,5,
        79,0,0,167,168,5,79,0,0,168,170,5,76,0,0,169,161,1,0,0,0,169,165,
        1,0,0,0,170,6,1,0,0,0,171,172,5,99,0,0,172,173,5,104,0,0,173,174,
        5,97,0,0,174,180,5,114,0,0,175,176,5,67,0,0,176,177,5,72,0,0,177,
        178,5,65,0,0,178,180,5,82,0,0,179,171,1,0,0,0,179,175,1,0,0,0,180,
        8,1,0,0,0,181,182,5,115,0,0,182,183,5,116,0,0,183,184,5,114,0,0,
        184,185,5,105,0,0,185,186,5,110,0,0,186,194,5,103,0,0,187,188,5,
        83,0,0,188,189,5,84,0,0,189,190,5,82,0,0,190,191,5,73,0,0,191,192,
        5,78,0,0,192,194,5,71,0,0,193,181,1,0,0,0,193,187,1,0,0,0,194,10,
        1,0,0,0,195,196,5,97,0,0,196,197,5,114,0,0,197,198,5,114,0,0,198,
        199,5,97,0,0,199,206,5,121,0,0,200,201,5,65,0,0,201,202,5,82,0,0,
        202,203,5,82,0,0,203,204,5,65,0,0,204,206,5,89,0,0,205,195,1,0,0,
        0,205,200,1,0,0,0,206,12,1,0,0,0,207,208,5,108,0,0,208,209,5,105,
        0,0,209,210,5,115,0,0,210,216,5,116,0,0,211,212,5,76,0,0,212,213,
        5,73,0,0,213,214,5,83,0,0,214,216,5,84,0,0,215,207,1,0,0,0,215,211,
        1,0,0,0,216,14,1,0,0,0,217,218,5,109,0,0,218,219,5,97,0,0,219,224,
        5,112,0,0,220,221,5,77,0,0,221,222,5,65,0,0,222,224,5,80,0,0,223,
        217,1,0,0,0,223,220,1,0,0,0,224,16,1,0,0,0,225,226,5,116,0,0,226,
        227,5,117,0,0,227,228,5,112,0,0,228,229,5,108,0,0,229,236,5,101,
        0,0,230,231,5,84,0,0,231,232,5,85,0,0,232,233,5,80,0,0,233,234,5,
        76,0,0,234,236,5,69,0,0,235,225,1,0,0,0,235,230,1,0,0,0,236,18,1,
        0,0,0,237,238,5,118,0,0,238,239,5,111,0,0,239,240,5,105,0,0,240,
        246,5,100,0,0,241,242,5,86,0,0,242,243,5,79,0,0,243,244,5,73,0,0,
        244,246,5,68,0,0,245,237,1,0,0,0,245,241,1,0,0,0,246,20,1,0,0,0,
        247,248,5,105,0,0,248,252,5,102,0,0,249,250,5,73,0,0,250,252,5,70,
        0,0,251,247,1,0,0,0,251,249,1,0,0,0,252,22,1,0,0,0,253,254,5,102,
        0,0,254,258,5,105,0,0,255,256,5,70,0,0,256,258,5,73,0,0,257,253,
        1,0,0,0,257,255,1,0,0,0,258,24,1,0,0,0,259,260,5,101,0,0,260,261,
        5,108,0,0,261,262,5,105,0,0,262,268,5,102,0,0,263,264,5,69,0,0,264,
        265,5,76,0,0,265,266,5,73,0,0,266,268,5,70,0,0,267,259,1,0,0,0,267,
        263,1,0,0,0,268,26,1,0,0,0,269,270,5,101,0,0,270,271,5,108,0,0,271,
        272,5,115,0,0,272,278,5,101,0,0,273,274,5,69,0,0,274,275,5,76,0,
        0,275,276,5,83,0,0,276,278,5,69,0,0,277,269,1,0,0,0,277,273,1,0,
        0,0,278,28,1,0,0,0,279,280,5,108,0,0,280,281,5,111,0,0,281,282,5,
        111,0,0,282,288,5,112,0,0,283,284,5,76,0,0,284,285,5,79,0,0,285,
        286,5,79,0,0,286,288,5,80,0,0,287,279,1,0,0,0,287,283,1,0,0,0,288,
        30,1,0,0,0,289,290,5,112,0,0,290,291,5,111,0,0,291,292,5,111,0,0,
        292,298,5,108,0,0,293,294,5,80,0,0,294,295,5,79,0,0,295,296,5,79,
        0,0,296,298,5,76,0,0,297,289,1,0,0,0,297,293,1,0,0,0,298,32,1,0,
        0,0,299,300,5,102,0,0,300,301,5,111,0,0,301,306,5,114,0,0,302,303,
        5,70,0,0,303,304,5,79,0,0,304,306,5,82,0,0,305,299,1,0,0,0,305,302,
        1,0,0,0,306,34,1,0,0,0,307,308,5,105,0,0,308,312,5,110,0,0,309,310,
        5,73,0,0,310,312,5,78,0,0,311,307,1,0,0,0,311,309,1,0,0,0,312,36,
        1,0,0,0,313,314,5,119,0,0,314,315,5,104,0,0,315,316,5,105,0,0,316,
        317,5,108,0,0,317,324,5,101,0,0,318,319,5,87,0,0,319,320,5,72,0,
        0,320,321,5,73,0,0,321,322,5,76,0,0,322,324,5,69,0,0,323,313,1,0,
        0,0,323,318,1,0,0,0,324,38,1,0,0,0,325,326,5,100,0,0,326,330,5,111,
        0,0,327,328,5,68,0,0,328,330,5,79,0,0,329,325,1,0,0,0,329,327,1,
        0,0,0,330,40,1,0,0,0,331,332,5,115,0,0,332,333,5,116,0,0,333,334,
        5,111,0,0,334,340,5,112,0,0,335,336,5,83,0,0,336,337,5,84,0,0,337,
        338,5,79,0,0,338,340,5,80,0,0,339,331,1,0,0,0,339,335,1,0,0,0,340,
        42,1,0,0,0,341,342,5,115,0,0,342,343,5,107,0,0,343,344,5,105,0,0,
        344,350,5,112,0,0,345,346,5,83,0,0,346,347,5,75,0,0,347,348,5,73,
        0,0,348,350,5,80,0,0,349,341,1,0,0,0,349,345,1,0,0,0,350,44,1,0,
        0,0,351,352,5,116,0,0,352,353,5,114,0,0,353,358,5,121,0,0,354,355,
        5,84,0,0,355,356,5,82,0,0,356,358,5,89,0,0,357,351,1,0,0,0,357,354,
        1,0,0,0,358,46,1,0,0,0,359,360,5,121,0,0,360,361,5,114,0,0,361,366,
        5,116,0,0,362,363,5,89,0,0,363,364,5,82,0,0,364,366,5,84,0,0,365,
        359,1,0,0,0,365,362,1,0,0,0,366,48,1,0,0,0,367,368,5,99,0,0,368,
        369,5,97,0,0,369,370,5,116,0,0,370,371,5,99,0,0,371,378,5,104,0,
        0,372,373,5,67,0,0,373,374,5,65,0,0,374,375,5,84,0,0,375,376,5,67,
        0,0,376,378,5,72,0,0,377,367,1,0,0,0,377,372,1,0,0,0,378,50,1,0,
        0,0,379,380,5,102,0,0,380,381,5,105,0,0,381,382,5,110,0,0,382,383,
        5,97,0,0,383,384,5,108,0,0,384,385,5,108,0,0,385,394,5,121,0,0,386,
        387,5,70,0,0,387,388,5,73,0,0,388,389,5,78,0,0,389,390,5,65,0,0,
        390,391,5,76,0,0,391,392,5,76,0,0,392,394,5,89,0,0,393,379,1,0,0,
        0,393,386,1,0,0,0,394,52,1,0,0,0,395,396,5,102,0,0,396,397,5,117,
        0,0,397,398,5,110,0,0,398,404,5,99,0,0,399,400,5,70,0,0,400,401,
        5,85,0,0,401,402,5,78,0,0,402,404,5,67,0,0,403,395,1,0,0,0,403,399,
        1,0,0,0,404,54,1,0,0,0,405,406,5,99,0,0,406,407,5,110,0,0,407,408,
        5,117,0,0,408,414,5,102,0,0,409,410,5,67,0,0,410,411,5,78,0,0,411,
        412,5,85,0,0,412,414,5,70,0,0,413,405,1,0,0,0,413,409,1,0,0,0,414,
        56,1,0,0,0,415,416,5,114,0,0,416,417,5,101,0,0,417,418,5,116,0,0,
        418,419,5,117,0,0,419,420,5,114,0,0,420,428,5,110,0,0,421,422,5,
        82,0,0,422,423,5,69,0,0,423,424,5,84,0,0,424,425,5,85,0,0,425,426,
        5,82,0,0,426,428,5,78,0,0,427,415,1,0,0,0,427,421,1,0,0,0,428,58,
        1,0,0,0,429,430,5,110,0,0,430,431,5,111,0,0,431,436,5,116,0,0,432,
        433,5,78,0,0,433,434,5,79,0,0,434,436,5,84,0,0,435,429,1,0,0,0,435,
        432,1,0,0,0,436,60,1,0,0,0,437,438,5,97,0,0,438,439,5,110,0,0,439,
        444,5,100,0,0,440,441,5,65,0,0,441,442,5,78,0,0,442,444,5,68,0,0,
        443,437,1,0,0,0,443,440,1,0,0,0,444,62,1,0,0,0,445,446,5,111,0,0,
        446,450,5,114,0,0,447,448,5,79,0,0,448,450,5,82,0,0,449,445,1,0,
        0,0,449,447,1,0,0,0,450,64,1,0,0,0,451,452,5,112,0,0,452,453,5,114,
        0,0,453,454,5,105,0,0,454,455,5,110,0,0,455,456,5,116,0,0,456,66,
        1,0,0,0,457,458,5,40,0,0,458,68,1,0,0,0,459,460,5,41,0,0,460,70,
        1,0,0,0,461,462,5,91,0,0,462,72,1,0,0,0,463,464,5,93,0,0,464,74,
        1,0,0,0,465,466,5,123,0,0,466,76,1,0,0,0,467,468,5,125,0,0,468,78,
        1,0,0,0,469,470,5,59,0,0,470,80,1,0,0,0,471,472,5,44,0,0,472,82,
        1,0,0,0,473,474,5,58,0,0,474,84,1,0,0,0,475,476,5,45,0,0,476,477,
        5,62,0,0,477,86,1,0,0,0,478,479,5,35,0,0,479,88,1,0,0,0,480,481,
        5,43,0,0,481,90,1,0,0,0,482,483,5,45,0,0,483,92,1,0,0,0,484,485,
        5,42,0,0,485,94,1,0,0,0,486,487,5,47,0,0,487,96,1,0,0,0,488,489,
        5,47,0,0,489,490,5,47,0,0,490,98,1,0,0,0,491,492,5,37,0,0,492,100,
        1,0,0,0,493,494,5,42,0,0,494,495,5,42,0,0,495,102,1,0,0,0,496,497,
        5,43,0,0,497,498,5,43,0,0,498,104,1,0,0,0,499,500,5,45,0,0,500,501,
        5,45,0,0,501,106,1,0,0,0,502,503,5,61,0,0,503,504,5,61,0,0,504,108,
        1,0,0,0,505,506,5,33,0,0,506,507,5,61,0,0,507,110,1,0,0,0,508,509,
        5,60,0,0,509,112,1,0,0,0,510,511,5,60,0,0,511,512,5,61,0,0,512,114,
        1,0,0,0,513,514,5,62,0,0,514,116,1,0,0,0,515,516,5,62,0,0,516,517,
        5,61,0,0,517,118,1,0,0,0,518,519,5,61,0,0,519,120,1,0,0,0,520,521,
        5,43,0,0,521,522,5,61,0,0,522,122,1,0,0,0,523,524,5,45,0,0,524,525,
        5,61,0,0,525,124,1,0,0,0,526,527,5,42,0,0,527,528,5,61,0,0,528,126,
        1,0,0,0,529,530,5,47,0,0,530,531,5,61,0,0,531,128,1,0,0,0,532,534,
        7,0,0,0,533,532,1,0,0,0,533,534,1,0,0,0,534,536,1,0,0,0,535,537,
        7,1,0,0,536,535,1,0,0,0,537,538,1,0,0,0,538,536,1,0,0,0,538,539,
        1,0,0,0,539,130,1,0,0,0,540,542,7,0,0,0,541,540,1,0,0,0,541,542,
        1,0,0,0,542,550,1,0,0,0,543,545,7,1,0,0,544,543,1,0,0,0,545,548,
        1,0,0,0,546,544,1,0,0,0,546,547,1,0,0,0,547,549,1,0,0,0,548,546,
        1,0,0,0,549,551,7,2,0,0,550,546,1,0,0,0,550,551,1,0,0,0,551,553,
        1,0,0,0,552,554,7,1,0,0,553,552,1,0,0,0,554,555,1,0,0,0,555,553,
        1,0,0,0,555,556,1,0,0,0,556,132,1,0,0,0,557,561,7,3,0,0,558,560,
        7,4,0,0,559,558,1,0,0,0,560,563,1,0,0,0,561,559,1,0,0,0,561,562,
        1,0,0,0,562,134,1,0,0,0,563,561,1,0,0,0,564,565,5,116,0,0,565,566,
        5,114,0,0,566,567,5,117,0,0,567,574,5,101,0,0,568,569,5,102,0,0,
        569,570,5,97,0,0,570,571,5,108,0,0,571,572,5,115,0,0,572,574,5,101,
        0,0,573,564,1,0,0,0,573,568,1,0,0,0,574,136,1,0,0,0,575,577,7,5,
        0,0,576,575,1,0,0,0,577,578,1,0,0,0,578,576,1,0,0,0,578,579,1,0,
        0,0,579,580,1,0,0,0,580,581,6,68,0,0,581,138,1,0,0,0,582,586,5,35,
        0,0,583,585,9,0,0,0,584,583,1,0,0,0,585,588,1,0,0,0,586,587,1,0,
        0,0,586,584,1,0,0,0,587,590,1,0,0,0,588,586,1,0,0,0,589,591,5,13,
        0,0,590,589,1,0,0,0,590,591,1,0,0,0,591,592,1,0,0,0,592,593,5,10,
        0,0,593,594,1,0,0,0,594,595,6,69,0,0,595,140,1,0,0,0,44,0,147,159,
        169,179,193,205,215,223,235,245,251,257,267,277,287,297,305,311,
        323,329,339,349,357,365,377,393,403,413,427,435,443,449,533,538,
        541,546,550,555,561,573,578,586,590,1,6,0,0
    ]

class IffiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    TYPE_INT = 1
    TYPE_FLOAT = 2
    TYPE_BOOL = 3
    TYPE_CHAR = 4
    TYPE_STRING = 5
    TYPE_ARRAY = 6
    TYPE_LIST = 7
    TYPE_MAP = 8
    TYPE_TUPLE = 9
    VOID = 10
    T_IF = 11
    T_FI = 12
    T_ELIF = 13
    T_ELSE = 14
    T_LOOP = 15
    T_POOL = 16
    T_FOR = 17
    T_IN = 18
    T_WHILE = 19
    T_DO = 20
    T_STOP = 21
    T_SKIP = 22
    T_TRY = 23
    T_YRT = 24
    T_CATCH = 25
    T_FINALLY = 26
    T_FUNC = 27
    T_CNUF = 28
    T_RETURN = 29
    NOT = 30
    AND = 31
    OR = 32
    PRINT = 33
    LEFT_PAREN = 34
    RIGHT_PAREN = 35
    LEFT_BRACKET = 36
    RIGHT_BRACKET = 37
    LEFT_BRACE = 38
    RIGHT_BRACE = 39
    SEMICOLON = 40
    COMMA = 41
    COLON = 42
    ARROW = 43
    HASHTAG = 44
    PLUS = 45
    MINUS = 46
    MULTIPLY = 47
    DIVIDE = 48
    FLOOR_DIVIDE = 49
    MODULO = 50
    POWER = 51
    INCREMENT = 52
    DECREMENT = 53
    EQUAL = 54
    NOT_EQUAL = 55
    LESS_THAN = 56
    LESS_EQUAL = 57
    GREATER_THAN = 58
    GREATER_EQUAL = 59
    ASSIGN = 60
    ASSIGN_PLUS = 61
    ASSIGN_MINUS = 62
    ASSIGN_MULTIPLY = 63
    ASSIGN_DIVIDE = 64
    INT = 65
    FLOAT = 66
    ID = 67
    BOOL = 68
    WS = 69
    LINE_COMMENT = 70

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'print'", "'('", "')'", "'['", "']'", "'{'", "'}'", "';'", 
            "','", "':'", "'->'", "'#'", "'+'", "'-'", "'*'", "'/'", "'//'", 
            "'%'", "'**'", "'++'", "'--'", "'=='", "'!='", "'<'", "'<='", 
            "'>'", "'>='", "'='", "'+='", "'-='", "'*='", "'/='" ]

    symbolicNames = [ "<INVALID>",
            "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", "TYPE_CHAR", "TYPE_STRING", 
            "TYPE_ARRAY", "TYPE_LIST", "TYPE_MAP", "TYPE_TUPLE", "VOID", 
            "T_IF", "T_FI", "T_ELIF", "T_ELSE", "T_LOOP", "T_POOL", "T_FOR", 
            "T_IN", "T_WHILE", "T_DO", "T_STOP", "T_SKIP", "T_TRY", "T_YRT", 
            "T_CATCH", "T_FINALLY", "T_FUNC", "T_CNUF", "T_RETURN", "NOT", 
            "AND", "OR", "PRINT", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACKET", 
            "RIGHT_BRACKET", "LEFT_BRACE", "RIGHT_BRACE", "SEMICOLON", "COMMA", 
            "COLON", "ARROW", "HASHTAG", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", 
            "FLOOR_DIVIDE", "MODULO", "POWER", "INCREMENT", "DECREMENT", 
            "EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_EQUAL", "GREATER_THAN", 
            "GREATER_EQUAL", "ASSIGN", "ASSIGN_PLUS", "ASSIGN_MINUS", "ASSIGN_MULTIPLY", 
            "ASSIGN_DIVIDE", "INT", "FLOAT", "ID", "BOOL", "WS", "LINE_COMMENT" ]

    ruleNames = [ "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", "TYPE_CHAR", "TYPE_STRING", 
                  "TYPE_ARRAY", "TYPE_LIST", "TYPE_MAP", "TYPE_TUPLE", "VOID", 
                  "T_IF", "T_FI", "T_ELIF", "T_ELSE", "T_LOOP", "T_POOL", 
                  "T_FOR", "T_IN", "T_WHILE", "T_DO", "T_STOP", "T_SKIP", 
                  "T_TRY", "T_YRT", "T_CATCH", "T_FINALLY", "T_FUNC", "T_CNUF", 
                  "T_RETURN", "NOT", "AND", "OR", "PRINT", "LEFT_PAREN", 
                  "RIGHT_PAREN", "LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_BRACE", 
                  "RIGHT_BRACE", "SEMICOLON", "COMMA", "COLON", "ARROW", 
                  "HASHTAG", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "FLOOR_DIVIDE", 
                  "MODULO", "POWER", "INCREMENT", "DECREMENT", "EQUAL", 
                  "NOT_EQUAL", "LESS_THAN", "LESS_EQUAL", "GREATER_THAN", 
                  "GREATER_EQUAL", "ASSIGN", "ASSIGN_PLUS", "ASSIGN_MINUS", 
                  "ASSIGN_MULTIPLY", "ASSIGN_DIVIDE", "INT", "FLOAT", "ID", 
                  "BOOL", "WS", "LINE_COMMENT" ]

    grammarFileName = "Iffi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


