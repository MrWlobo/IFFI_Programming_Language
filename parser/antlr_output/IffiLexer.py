# Generated from Iffi.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,69,588,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,1,0,1,0,1,0,1,0,1,0,1,0,3,
        0,146,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,158,8,1,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,168,8,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,3,3,178,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,3,4,192,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,204,
        8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,214,8,6,1,7,1,7,1,7,1,7,
        1,7,1,7,3,7,222,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,
        234,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,244,8,9,1,10,1,10,1,
        10,1,10,3,10,250,8,10,1,11,1,11,1,11,1,11,3,11,256,8,11,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,3,12,266,8,12,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,3,13,276,8,13,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,14,3,14,286,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        3,15,296,8,15,1,16,1,16,1,16,1,16,1,16,1,16,3,16,304,8,16,1,17,1,
        17,1,17,1,17,3,17,310,8,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,3,18,322,8,18,1,19,1,19,1,19,1,19,3,19,328,8,19,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,338,8,20,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,3,21,348,8,21,1,22,1,22,1,22,1,22,1,22,
        1,22,3,22,356,8,22,1,23,1,23,1,23,1,23,1,23,1,23,3,23,364,8,23,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,376,8,24,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,3,25,392,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,402,
        8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,412,8,27,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,426,
        8,28,1,29,1,29,1,29,1,29,1,29,1,29,3,29,434,8,29,1,30,1,30,1,30,
        1,30,1,30,1,30,3,30,442,8,30,1,31,1,31,1,31,1,31,3,31,448,8,31,1,
        32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,
        38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,
        44,1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,
        50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,
        54,1,55,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,
        59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,3,63,526,8,
        63,1,63,4,63,529,8,63,11,63,12,63,530,1,64,3,64,534,8,64,1,64,5,
        64,537,8,64,10,64,12,64,540,9,64,1,64,3,64,543,8,64,1,64,4,64,546,
        8,64,11,64,12,64,547,1,65,1,65,5,65,552,8,65,10,65,12,65,555,9,65,
        1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,3,66,566,8,66,1,67,
        4,67,569,8,67,11,67,12,67,570,1,67,1,67,1,68,1,68,5,68,577,8,68,
        10,68,12,68,580,9,68,1,68,3,68,583,8,68,1,68,1,68,1,68,1,68,1,578,
        0,69,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
        56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,
        131,66,133,67,135,68,137,69,1,0,6,1,0,45,45,1,0,48,57,1,0,46,46,
        3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,
        13,32,32,630,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
        1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
        1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
        0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
        0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
        127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,
        0,0,0,137,1,0,0,0,1,145,1,0,0,0,3,157,1,0,0,0,5,167,1,0,0,0,7,177,
        1,0,0,0,9,191,1,0,0,0,11,203,1,0,0,0,13,213,1,0,0,0,15,221,1,0,0,
        0,17,233,1,0,0,0,19,243,1,0,0,0,21,249,1,0,0,0,23,255,1,0,0,0,25,
        265,1,0,0,0,27,275,1,0,0,0,29,285,1,0,0,0,31,295,1,0,0,0,33,303,
        1,0,0,0,35,309,1,0,0,0,37,321,1,0,0,0,39,327,1,0,0,0,41,337,1,0,
        0,0,43,347,1,0,0,0,45,355,1,0,0,0,47,363,1,0,0,0,49,375,1,0,0,0,
        51,391,1,0,0,0,53,401,1,0,0,0,55,411,1,0,0,0,57,425,1,0,0,0,59,433,
        1,0,0,0,61,441,1,0,0,0,63,447,1,0,0,0,65,449,1,0,0,0,67,451,1,0,
        0,0,69,453,1,0,0,0,71,455,1,0,0,0,73,457,1,0,0,0,75,459,1,0,0,0,
        77,461,1,0,0,0,79,463,1,0,0,0,81,465,1,0,0,0,83,467,1,0,0,0,85,470,
        1,0,0,0,87,472,1,0,0,0,89,474,1,0,0,0,91,476,1,0,0,0,93,478,1,0,
        0,0,95,480,1,0,0,0,97,483,1,0,0,0,99,485,1,0,0,0,101,488,1,0,0,0,
        103,491,1,0,0,0,105,494,1,0,0,0,107,497,1,0,0,0,109,500,1,0,0,0,
        111,502,1,0,0,0,113,505,1,0,0,0,115,507,1,0,0,0,117,510,1,0,0,0,
        119,512,1,0,0,0,121,515,1,0,0,0,123,518,1,0,0,0,125,521,1,0,0,0,
        127,525,1,0,0,0,129,533,1,0,0,0,131,549,1,0,0,0,133,565,1,0,0,0,
        135,568,1,0,0,0,137,574,1,0,0,0,139,140,5,105,0,0,140,141,5,110,
        0,0,141,146,5,116,0,0,142,143,5,73,0,0,143,144,5,78,0,0,144,146,
        5,84,0,0,145,139,1,0,0,0,145,142,1,0,0,0,146,2,1,0,0,0,147,148,5,
        102,0,0,148,149,5,108,0,0,149,150,5,111,0,0,150,151,5,97,0,0,151,
        158,5,116,0,0,152,153,5,70,0,0,153,154,5,76,0,0,154,155,5,79,0,0,
        155,156,5,65,0,0,156,158,5,84,0,0,157,147,1,0,0,0,157,152,1,0,0,
        0,158,4,1,0,0,0,159,160,5,98,0,0,160,161,5,111,0,0,161,162,5,111,
        0,0,162,168,5,108,0,0,163,164,5,66,0,0,164,165,5,79,0,0,165,166,
        5,79,0,0,166,168,5,76,0,0,167,159,1,0,0,0,167,163,1,0,0,0,168,6,
        1,0,0,0,169,170,5,99,0,0,170,171,5,104,0,0,171,172,5,97,0,0,172,
        178,5,114,0,0,173,174,5,67,0,0,174,175,5,72,0,0,175,176,5,65,0,0,
        176,178,5,82,0,0,177,169,1,0,0,0,177,173,1,0,0,0,178,8,1,0,0,0,179,
        180,5,115,0,0,180,181,5,116,0,0,181,182,5,114,0,0,182,183,5,105,
        0,0,183,184,5,110,0,0,184,192,5,103,0,0,185,186,5,83,0,0,186,187,
        5,84,0,0,187,188,5,82,0,0,188,189,5,73,0,0,189,190,5,78,0,0,190,
        192,5,71,0,0,191,179,1,0,0,0,191,185,1,0,0,0,192,10,1,0,0,0,193,
        194,5,97,0,0,194,195,5,114,0,0,195,196,5,114,0,0,196,197,5,97,0,
        0,197,204,5,121,0,0,198,199,5,65,0,0,199,200,5,82,0,0,200,201,5,
        82,0,0,201,202,5,65,0,0,202,204,5,89,0,0,203,193,1,0,0,0,203,198,
        1,0,0,0,204,12,1,0,0,0,205,206,5,108,0,0,206,207,5,105,0,0,207,208,
        5,115,0,0,208,214,5,116,0,0,209,210,5,76,0,0,210,211,5,73,0,0,211,
        212,5,83,0,0,212,214,5,84,0,0,213,205,1,0,0,0,213,209,1,0,0,0,214,
        14,1,0,0,0,215,216,5,109,0,0,216,217,5,97,0,0,217,222,5,112,0,0,
        218,219,5,77,0,0,219,220,5,65,0,0,220,222,5,80,0,0,221,215,1,0,0,
        0,221,218,1,0,0,0,222,16,1,0,0,0,223,224,5,116,0,0,224,225,5,117,
        0,0,225,226,5,112,0,0,226,227,5,108,0,0,227,234,5,101,0,0,228,229,
        5,84,0,0,229,230,5,85,0,0,230,231,5,80,0,0,231,232,5,76,0,0,232,
        234,5,69,0,0,233,223,1,0,0,0,233,228,1,0,0,0,234,18,1,0,0,0,235,
        236,5,118,0,0,236,237,5,111,0,0,237,238,5,105,0,0,238,244,5,100,
        0,0,239,240,5,86,0,0,240,241,5,79,0,0,241,242,5,73,0,0,242,244,5,
        68,0,0,243,235,1,0,0,0,243,239,1,0,0,0,244,20,1,0,0,0,245,246,5,
        105,0,0,246,250,5,102,0,0,247,248,5,73,0,0,248,250,5,70,0,0,249,
        245,1,0,0,0,249,247,1,0,0,0,250,22,1,0,0,0,251,252,5,102,0,0,252,
        256,5,105,0,0,253,254,5,70,0,0,254,256,5,73,0,0,255,251,1,0,0,0,
        255,253,1,0,0,0,256,24,1,0,0,0,257,258,5,101,0,0,258,259,5,108,0,
        0,259,260,5,105,0,0,260,266,5,102,0,0,261,262,5,69,0,0,262,263,5,
        76,0,0,263,264,5,73,0,0,264,266,5,70,0,0,265,257,1,0,0,0,265,261,
        1,0,0,0,266,26,1,0,0,0,267,268,5,101,0,0,268,269,5,108,0,0,269,270,
        5,115,0,0,270,276,5,101,0,0,271,272,5,69,0,0,272,273,5,76,0,0,273,
        274,5,83,0,0,274,276,5,69,0,0,275,267,1,0,0,0,275,271,1,0,0,0,276,
        28,1,0,0,0,277,278,5,108,0,0,278,279,5,111,0,0,279,280,5,111,0,0,
        280,286,5,112,0,0,281,282,5,76,0,0,282,283,5,79,0,0,283,284,5,79,
        0,0,284,286,5,80,0,0,285,277,1,0,0,0,285,281,1,0,0,0,286,30,1,0,
        0,0,287,288,5,112,0,0,288,289,5,111,0,0,289,290,5,111,0,0,290,296,
        5,108,0,0,291,292,5,80,0,0,292,293,5,79,0,0,293,294,5,79,0,0,294,
        296,5,76,0,0,295,287,1,0,0,0,295,291,1,0,0,0,296,32,1,0,0,0,297,
        298,5,102,0,0,298,299,5,111,0,0,299,304,5,114,0,0,300,301,5,70,0,
        0,301,302,5,79,0,0,302,304,5,82,0,0,303,297,1,0,0,0,303,300,1,0,
        0,0,304,34,1,0,0,0,305,306,5,105,0,0,306,310,5,110,0,0,307,308,5,
        73,0,0,308,310,5,78,0,0,309,305,1,0,0,0,309,307,1,0,0,0,310,36,1,
        0,0,0,311,312,5,119,0,0,312,313,5,104,0,0,313,314,5,105,0,0,314,
        315,5,108,0,0,315,322,5,101,0,0,316,317,5,87,0,0,317,318,5,72,0,
        0,318,319,5,73,0,0,319,320,5,76,0,0,320,322,5,69,0,0,321,311,1,0,
        0,0,321,316,1,0,0,0,322,38,1,0,0,0,323,324,5,100,0,0,324,328,5,111,
        0,0,325,326,5,68,0,0,326,328,5,79,0,0,327,323,1,0,0,0,327,325,1,
        0,0,0,328,40,1,0,0,0,329,330,5,115,0,0,330,331,5,116,0,0,331,332,
        5,111,0,0,332,338,5,112,0,0,333,334,5,83,0,0,334,335,5,84,0,0,335,
        336,5,79,0,0,336,338,5,80,0,0,337,329,1,0,0,0,337,333,1,0,0,0,338,
        42,1,0,0,0,339,340,5,115,0,0,340,341,5,107,0,0,341,342,5,105,0,0,
        342,348,5,112,0,0,343,344,5,83,0,0,344,345,5,75,0,0,345,346,5,73,
        0,0,346,348,5,80,0,0,347,339,1,0,0,0,347,343,1,0,0,0,348,44,1,0,
        0,0,349,350,5,116,0,0,350,351,5,114,0,0,351,356,5,121,0,0,352,353,
        5,84,0,0,353,354,5,82,0,0,354,356,5,89,0,0,355,349,1,0,0,0,355,352,
        1,0,0,0,356,46,1,0,0,0,357,358,5,121,0,0,358,359,5,114,0,0,359,364,
        5,116,0,0,360,361,5,89,0,0,361,362,5,82,0,0,362,364,5,84,0,0,363,
        357,1,0,0,0,363,360,1,0,0,0,364,48,1,0,0,0,365,366,5,99,0,0,366,
        367,5,97,0,0,367,368,5,116,0,0,368,369,5,99,0,0,369,376,5,104,0,
        0,370,371,5,67,0,0,371,372,5,65,0,0,372,373,5,84,0,0,373,374,5,67,
        0,0,374,376,5,72,0,0,375,365,1,0,0,0,375,370,1,0,0,0,376,50,1,0,
        0,0,377,378,5,102,0,0,378,379,5,105,0,0,379,380,5,110,0,0,380,381,
        5,97,0,0,381,382,5,108,0,0,382,383,5,108,0,0,383,392,5,121,0,0,384,
        385,5,70,0,0,385,386,5,73,0,0,386,387,5,78,0,0,387,388,5,65,0,0,
        388,389,5,76,0,0,389,390,5,76,0,0,390,392,5,89,0,0,391,377,1,0,0,
        0,391,384,1,0,0,0,392,52,1,0,0,0,393,394,5,102,0,0,394,395,5,117,
        0,0,395,396,5,110,0,0,396,402,5,99,0,0,397,398,5,70,0,0,398,399,
        5,85,0,0,399,400,5,78,0,0,400,402,5,67,0,0,401,393,1,0,0,0,401,397,
        1,0,0,0,402,54,1,0,0,0,403,404,5,99,0,0,404,405,5,110,0,0,405,406,
        5,117,0,0,406,412,5,102,0,0,407,408,5,67,0,0,408,409,5,78,0,0,409,
        410,5,85,0,0,410,412,5,70,0,0,411,403,1,0,0,0,411,407,1,0,0,0,412,
        56,1,0,0,0,413,414,5,114,0,0,414,415,5,101,0,0,415,416,5,116,0,0,
        416,417,5,117,0,0,417,418,5,114,0,0,418,426,5,110,0,0,419,420,5,
        82,0,0,420,421,5,69,0,0,421,422,5,84,0,0,422,423,5,85,0,0,423,424,
        5,82,0,0,424,426,5,78,0,0,425,413,1,0,0,0,425,419,1,0,0,0,426,58,
        1,0,0,0,427,428,5,110,0,0,428,429,5,111,0,0,429,434,5,116,0,0,430,
        431,5,78,0,0,431,432,5,79,0,0,432,434,5,84,0,0,433,427,1,0,0,0,433,
        430,1,0,0,0,434,60,1,0,0,0,435,436,5,97,0,0,436,437,5,110,0,0,437,
        442,5,100,0,0,438,439,5,65,0,0,439,440,5,78,0,0,440,442,5,68,0,0,
        441,435,1,0,0,0,441,438,1,0,0,0,442,62,1,0,0,0,443,444,5,111,0,0,
        444,448,5,114,0,0,445,446,5,79,0,0,446,448,5,82,0,0,447,443,1,0,
        0,0,447,445,1,0,0,0,448,64,1,0,0,0,449,450,5,40,0,0,450,66,1,0,0,
        0,451,452,5,41,0,0,452,68,1,0,0,0,453,454,5,91,0,0,454,70,1,0,0,
        0,455,456,5,93,0,0,456,72,1,0,0,0,457,458,5,123,0,0,458,74,1,0,0,
        0,459,460,5,125,0,0,460,76,1,0,0,0,461,462,5,59,0,0,462,78,1,0,0,
        0,463,464,5,44,0,0,464,80,1,0,0,0,465,466,5,58,0,0,466,82,1,0,0,
        0,467,468,5,45,0,0,468,469,5,62,0,0,469,84,1,0,0,0,470,471,5,35,
        0,0,471,86,1,0,0,0,472,473,5,43,0,0,473,88,1,0,0,0,474,475,5,45,
        0,0,475,90,1,0,0,0,476,477,5,42,0,0,477,92,1,0,0,0,478,479,5,47,
        0,0,479,94,1,0,0,0,480,481,5,47,0,0,481,482,5,47,0,0,482,96,1,0,
        0,0,483,484,5,37,0,0,484,98,1,0,0,0,485,486,5,42,0,0,486,487,5,42,
        0,0,487,100,1,0,0,0,488,489,5,43,0,0,489,490,5,43,0,0,490,102,1,
        0,0,0,491,492,5,45,0,0,492,493,5,45,0,0,493,104,1,0,0,0,494,495,
        5,61,0,0,495,496,5,61,0,0,496,106,1,0,0,0,497,498,5,33,0,0,498,499,
        5,61,0,0,499,108,1,0,0,0,500,501,5,60,0,0,501,110,1,0,0,0,502,503,
        5,60,0,0,503,504,5,61,0,0,504,112,1,0,0,0,505,506,5,62,0,0,506,114,
        1,0,0,0,507,508,5,62,0,0,508,509,5,61,0,0,509,116,1,0,0,0,510,511,
        5,61,0,0,511,118,1,0,0,0,512,513,5,43,0,0,513,514,5,61,0,0,514,120,
        1,0,0,0,515,516,5,45,0,0,516,517,5,61,0,0,517,122,1,0,0,0,518,519,
        5,42,0,0,519,520,5,61,0,0,520,124,1,0,0,0,521,522,5,47,0,0,522,523,
        5,61,0,0,523,126,1,0,0,0,524,526,7,0,0,0,525,524,1,0,0,0,525,526,
        1,0,0,0,526,528,1,0,0,0,527,529,7,1,0,0,528,527,1,0,0,0,529,530,
        1,0,0,0,530,528,1,0,0,0,530,531,1,0,0,0,531,128,1,0,0,0,532,534,
        7,0,0,0,533,532,1,0,0,0,533,534,1,0,0,0,534,542,1,0,0,0,535,537,
        7,1,0,0,536,535,1,0,0,0,537,540,1,0,0,0,538,536,1,0,0,0,538,539,
        1,0,0,0,539,541,1,0,0,0,540,538,1,0,0,0,541,543,7,2,0,0,542,538,
        1,0,0,0,542,543,1,0,0,0,543,545,1,0,0,0,544,546,7,1,0,0,545,544,
        1,0,0,0,546,547,1,0,0,0,547,545,1,0,0,0,547,548,1,0,0,0,548,130,
        1,0,0,0,549,553,7,3,0,0,550,552,7,4,0,0,551,550,1,0,0,0,552,555,
        1,0,0,0,553,551,1,0,0,0,553,554,1,0,0,0,554,132,1,0,0,0,555,553,
        1,0,0,0,556,557,5,116,0,0,557,558,5,114,0,0,558,559,5,117,0,0,559,
        566,5,101,0,0,560,561,5,102,0,0,561,562,5,97,0,0,562,563,5,108,0,
        0,563,564,5,115,0,0,564,566,5,101,0,0,565,556,1,0,0,0,565,560,1,
        0,0,0,566,134,1,0,0,0,567,569,7,5,0,0,568,567,1,0,0,0,569,570,1,
        0,0,0,570,568,1,0,0,0,570,571,1,0,0,0,571,572,1,0,0,0,572,573,6,
        67,0,0,573,136,1,0,0,0,574,578,5,35,0,0,575,577,9,0,0,0,576,575,
        1,0,0,0,577,580,1,0,0,0,578,579,1,0,0,0,578,576,1,0,0,0,579,582,
        1,0,0,0,580,578,1,0,0,0,581,583,5,13,0,0,582,581,1,0,0,0,582,583,
        1,0,0,0,583,584,1,0,0,0,584,585,5,10,0,0,585,586,1,0,0,0,586,587,
        6,68,0,0,587,138,1,0,0,0,44,0,145,157,167,177,191,203,213,221,233,
        243,249,255,265,275,285,295,303,309,321,327,337,347,355,363,375,
        391,401,411,425,433,441,447,525,530,533,538,542,547,553,565,570,
        578,582,1,6,0,0
    ]

class IffiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    TYPE_INT = 1
    TYPE_FLOAT = 2
    TYPE_BOOL = 3
    TYPE_CHAR = 4
    TYPE_STRING = 5
    TYPE_ARRAY = 6
    TYPE_LIST = 7
    TYPE_MAP = 8
    TYPE_TUPLE = 9
    VOID = 10
    T_IF = 11
    T_FI = 12
    T_ELIF = 13
    T_ELSE = 14
    T_LOOP = 15
    T_POOL = 16
    T_FOR = 17
    T_IN = 18
    T_WHILE = 19
    T_DO = 20
    T_STOP = 21
    T_SKIP = 22
    T_TRY = 23
    T_YRT = 24
    T_CATCH = 25
    T_FINALLY = 26
    T_FUNC = 27
    T_CNUF = 28
    T_RETURN = 29
    NOT = 30
    AND = 31
    OR = 32
    LEFT_PAREN = 33
    RIGHT_PAREN = 34
    LEFT_BRACKET = 35
    RIGHT_BRACKET = 36
    LEFT_BRACE = 37
    RIGHT_BRACE = 38
    SEMICOLON = 39
    COMMA = 40
    COLON = 41
    ARROW = 42
    HASHTAG = 43
    PLUS = 44
    MINUS = 45
    MULTIPLY = 46
    DIVIDE = 47
    FLOOR_DIVIDE = 48
    MODULO = 49
    POWER = 50
    INCREMENT = 51
    DECREMENT = 52
    EQUAL = 53
    NOT_EQUAL = 54
    LESS_THAN = 55
    LESS_EQUAL = 56
    GREATER_THAN = 57
    GREATER_EQUAL = 58
    ASSIGN = 59
    ASSIGN_PLUS = 60
    ASSIGN_MINUS = 61
    ASSIGN_MULTIPLY = 62
    ASSIGN_DIVIDE = 63
    INT = 64
    FLOAT = 65
    ID = 66
    BOOL = 67
    WS = 68
    LINE_COMMENT = 69

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'{'", "'}'", "';'", "','", "':'", 
            "'->'", "'#'", "'+'", "'-'", "'*'", "'/'", "'//'", "'%'", "'**'", 
            "'++'", "'--'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", 
            "'='", "'+='", "'-='", "'*='", "'/='" ]

    symbolicNames = [ "<INVALID>",
            "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", "TYPE_CHAR", "TYPE_STRING", 
            "TYPE_ARRAY", "TYPE_LIST", "TYPE_MAP", "TYPE_TUPLE", "VOID", 
            "T_IF", "T_FI", "T_ELIF", "T_ELSE", "T_LOOP", "T_POOL", "T_FOR", 
            "T_IN", "T_WHILE", "T_DO", "T_STOP", "T_SKIP", "T_TRY", "T_YRT", 
            "T_CATCH", "T_FINALLY", "T_FUNC", "T_CNUF", "T_RETURN", "NOT", 
            "AND", "OR", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACKET", "RIGHT_BRACKET", 
            "LEFT_BRACE", "RIGHT_BRACE", "SEMICOLON", "COMMA", "COLON", 
            "ARROW", "HASHTAG", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "FLOOR_DIVIDE", 
            "MODULO", "POWER", "INCREMENT", "DECREMENT", "EQUAL", "NOT_EQUAL", 
            "LESS_THAN", "LESS_EQUAL", "GREATER_THAN", "GREATER_EQUAL", 
            "ASSIGN", "ASSIGN_PLUS", "ASSIGN_MINUS", "ASSIGN_MULTIPLY", 
            "ASSIGN_DIVIDE", "INT", "FLOAT", "ID", "BOOL", "WS", "LINE_COMMENT" ]

    ruleNames = [ "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", "TYPE_CHAR", "TYPE_STRING", 
                  "TYPE_ARRAY", "TYPE_LIST", "TYPE_MAP", "TYPE_TUPLE", "VOID", 
                  "T_IF", "T_FI", "T_ELIF", "T_ELSE", "T_LOOP", "T_POOL", 
                  "T_FOR", "T_IN", "T_WHILE", "T_DO", "T_STOP", "T_SKIP", 
                  "T_TRY", "T_YRT", "T_CATCH", "T_FINALLY", "T_FUNC", "T_CNUF", 
                  "T_RETURN", "NOT", "AND", "OR", "LEFT_PAREN", "RIGHT_PAREN", 
                  "LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_BRACE", "RIGHT_BRACE", 
                  "SEMICOLON", "COMMA", "COLON", "ARROW", "HASHTAG", "PLUS", 
                  "MINUS", "MULTIPLY", "DIVIDE", "FLOOR_DIVIDE", "MODULO", 
                  "POWER", "INCREMENT", "DECREMENT", "EQUAL", "NOT_EQUAL", 
                  "LESS_THAN", "LESS_EQUAL", "GREATER_THAN", "GREATER_EQUAL", 
                  "ASSIGN", "ASSIGN_PLUS", "ASSIGN_MINUS", "ASSIGN_MULTIPLY", 
                  "ASSIGN_DIVIDE", "INT", "FLOAT", "ID", "BOOL", "WS", "LINE_COMMENT" ]

    grammarFileName = "Iffi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


